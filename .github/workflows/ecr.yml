name: ecr
on:
  workflow_call:
    inputs:
      terraform_directory:
        type: string
        required: true
        description: 'Terraform folder'
      repo_name:
        type: string
        required: true
        description: 'ECR Repo name'
      build_command:
        type: string
        required: true
        description: 'ECR Repo name'
      tag_command:
        type: string
        required: true
        description: 'ECR Repo name'
      push_command:
        type: string
        required: true
        description: 'ECR Repo name'
    secrets:
      aws-access-key-id:
        required: true
        description: 'AWS Access Id'
      aws-secret-access-key:
        required: true
        description: 'AWS Secret Key'
      aws-region:
        required: true
        description: 'AWS Region to be used'

jobs:
  ecr:
    name: ecr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3

      - name: Setup AWS Credentials
        id: setup-aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ secrets.aws-region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.repo_name }}
          IMAGE_TAG: latest
        run: |
          docker build -t servicio-planes ${{ inputs.terraform_directory }}
          docker tag servicio-planes:latest 344488016360.dkr.ecr.us-east-1.amazonaws.com/servicio-planes:latest
          docker push 344488016360.dkr.ecr.us-east-1.amazonaws.com/servicio-planes:latest
#          echo ECR_REGISTRY
#          echo ECR_REPOSITORY
#          ${{ inputs.build_command }}
#          ${{ inputs.tag_command }}
#          ${{ inputs.push_command }}
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG