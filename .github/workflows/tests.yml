name: coverage
on:
  push:
    branches:
      - 'develop'
jobs:
  run-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    services:
      users:
        image: postgres
        env:
          POSTGRES_PASSWORD: prueba
          POSTGRES_USER: prueba
          POSTGRES_DB: prueba
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_API_IDENTIFIER: ${{ secrets.AUTH0_API_IDENTIFIER }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v4
      - name: Configuracion de entorno de Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      #### Api Gateway
      - name: Install Dependencies Api Gateway 
        working-directory: ./backend/services/apigateway
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests Api Gateway
        working-directory: ./backend/services/apigateway
        run: |
          coverage run -m pytest tests/* -v
      - name: Run cov report Api Gateway
        working-directory: ./backend/services/apigateway
        run: |
          coverage report --fail-under=55
          pytest --cov . --cov-report=xml:apigateway_coverage.xml
      
      #### Entrenamiento
      - name: Install Dependencies  Entrenamiento
        working-directory: ./backend/services/entrenamiento
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests  Entrenamiento
        working-directory: ./backend/services/entrenamiento
        run: |
          coverage run -m pytest tests/* -v
      - name: Run cov report  Entrenamiento
        working-directory: ./backend/services/entrenamiento
        run: |
          coverage report --fail-under=70
          pytest --cov . --cov-report=xml:entrenamiento_coverage.xml

      ### USERS
      - name: Install Dependencies USERS
        working-directory: ./backend/services/users
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Start FastAPI App USERS
        working-directory: ./backend/services/users
        run: |
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 &
      - name: Run Tests USERS
        working-directory: ./backend/services/users
        run: |
          coverage run -m pytest tests/* -v
      - name: Run cov report USERS
        working-directory: ./backend/services/users
        run: |
          coverage report --fail-under=70     
          pytest --cov . --cov-report=xml:users.xml

      ### eventos
      - name: Install Dependencies eventos
        working-directory: ./backend/services/eventos
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Start FastAPI App eventos
        working-directory: ./backend/services/eventos
        run: |
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 &
      - name: Run Tests eventos
        working-directory: ./backend/services/eventos
        run: |
          coverage run -m pytest tests/* -v
      - name: Run cov report eventos
        working-directory: ./backend/services/eventos
        run: |
          coverage report --fail-under=70     
          pytest --cov . --cov-report=xml:eventos.xml

      ### planes
      - name: Install Dependencies planes
        working-directory: ./backend/services/planes
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Start FastAPI App planes
        working-directory: ./backend/services/planes
        run: |
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 &
      - name: Run Tests planes
        working-directory: ./backend/services/planes
        run: |
          coverage run -m pytest tests/* -v
      - name: Run cov report planes
        working-directory: ./backend/services/planes
        run: |
          coverage report --fail-under=70     
          pytest --cov . --cov-report=xml:planes.xml

      ### terceros
      - name: Install Dependencies terceros
        working-directory: ./backend/services/terceros
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Start FastAPI App terceros
        working-directory: ./backend/services/terceros
        run: |
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 &
      - name: Run Tests terceros
        working-directory: ./backend/services/terceros
        run: |
          coverage run -m pytest tests/* -v
      - name: Run cov report terceros
        working-directory: ./backend/services/terceros
        run: |
          coverage report --fail-under=70     
          pytest --cov . --cov-report=xml:terceros.xml


      ### Upload coverage reports to Codecov    
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v4.2.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

        